[
{
	"uri": "/00_introduction.html",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": " Introduction The history of Workloads In 2006, Amazon web services known as (AWS) began offering IT infrastrcture services to the buisnesses in form of web services,now commonly known as cloud computing.Many businesses Are adopting cloud technologies and moving their workloads to the cloud.\nReady to use workloads? The workload technology is one of the main components of building a cloud-native application today, workloads could be cloud-based only or implement as hybrid cloud technology (physical + Cloud workloads), a lot of advantages when an organization decides to move their workloads to the sky:\n1-Increase performance.\n2-Less cost operations.\n3-Scalability when you need to expand your resource and vice Versa.\n4-Availability with peace of mind.\n5-Manageability through a single pane of glass.\n6-Security using NACLS and security groups to prevent non-legetimate access.\nWith the increase in cloud-native application development, cloud workloads are a logical choice for modern business requirements. With the speed of leveraging containers in cloud-native architectures. There are many advantages, however, new technologies mean that new threats, Bad guys will try to find new ways to penetrate your environment, the organizations must thinking that they need to secure their workloads across physical servers, virtual, cloud, or containers.\nThe examples and sample code provided in this workshop are intended to be consumed as instructional content. These will help you understand how various Trend Micro - Cloud One and AWS services can be architected to build a solution while demonstrating best practices along the way.  "
},
{
	"uri": "/",
	"title": "Main Page",
	"tags": [],
	"description": "",
	"content": " Data Security with Trend Micro Welcome Welcome to the Data Security with Trend Micro hands-on workshop.\nIn this workshop, you will learn how to scan your files in S3 buckets for malware and integrate into your custom workflows, by automating with your current resources, directly in your AWS environment.\nUsing Trend Micro - Cloud One, AWS S3, AWS Lambda, AWS SQS, AWS SNS and AWS Cloud Formation, you’ll get hands-on experience implementing an automated Cloud Formation security stack to provide Data Security capabilities to your S3 buckets.\nWho is Trend Micro? We\u0026rsquo;re a global leader in cybersecurity that helps make the world safe for exchanging digital information. Leveraging over 30 years of security expertise, global threat research, and continuous innovation, Trend Micro enables resilience for businesses, governments, and consumers. Security is our entire focus, and it shows. This single-minded passion has inspired our innovations that keep up with the bad guys despite a changing IT landscape, riskier user behavior, and constantly evolving threats.\nOur threat researchers and data scientists use the latest techniques to analyze data and identify threats in real time. This is achieved through augmented cyber intelligence—which combines the focused findings from artificial intelligence (AI) and machine learning with knowledge from threat experts who are constantly researching the latest tactics, techniques, and procedures (TTPs) used by cybercriminals. We rapidly and accurately collate this wealth of global threat intelligence using automated security analytics to customize protection against the threats that are most likely to impact you. To maintain this immense scale of threat protection, we’ve created one of the world’s most extensive cloud-based infrastructures, delivering automatic correlation of threats across multiple security layers for customized protection, giving you threat visibility across platforms, security layers, and users globally.\n Learning Objectives The learning objectives of this workshop is to familiarize users with the installation, configuration, and usage of the Trend Micro Cloud One File Storage Security.\nExpected Duration: 1 Hour\nWho should attend  Site Reliability Engineers (SREs) Developers DevOps Engineers Cloud Architects Solution Architects Information Security GRC teams Tech leads and Program Managers (PM)  Before we dive in, let’s go through a refresher on the core concepts explored in this workshop ☝️\n"
},
{
	"uri": "/00_introduction/01_cloud_one.html",
	"title": "Trend Micro Cloud One",
	"tags": [],
	"description": "",
	"content": " What is Trend Micro Cloud One? Trend Micro Cloud One, a security services platform for organizations building in the cloud, delivers the broadest and deepest cloud security offering in one solution, enabling you to secure your cloud infrastructure with clarity and simplicity. By considering your cloud projects and objectives holistically, Trend Micro Cloud One is able to provide powerful security, while you leverage all of the benefits and efficiencies the cloud offers your business. Comprised of multiple services designed to meet specific cloud security needs, Trend Micro Cloud One gives you the flexibility to solve your challenges today, and the innovation to evolve with your cloud services in the future.\nBenefits  Automated: Security as code lets your DevOps teams bake security into their build pipeline to release continuously and frequently. With built-in automation, including automated discovery and deployment, quick-start templates, and our Automation Center, secure your environment and meet compliance requirements quickly.\n Flexible: Builder’s choice. Security for your hybrid cloud, multi-cloud, and multi-service environments, as well as protection for any vintage of application delivery—with broad platform support.\n All-in-One Solution: One platform that has the breadth, depth, and innovation required to meet and manage your cloud security needs today, and in the future.\n  How Does Cloud One Helps? No matter where you are at in your cloud journey, Trend Micro Cloud One has you covered. From virtualization and cloud migration, to DevOps, container, and serverless security—get an automated, flexible, and all-in-one solution for your cloud security priorities. By not having to re-architect, by integrating with your existing tools and processes, and by focusing on automation, Trend Micro Cloud One will save you valuable time and resources while enhancing your security posture.\nWe recognize that there are different drivers behind your constantly evolving cloud security priorities. We also understand all of the continuous work it takes to secure your complex and fast-paced multi-cloud environment—so let’s simplify it.\n Cloud Migration: The transition to the cloud isn’t as simple as clicking a button, and having a hybrid and multi-cloud strategy is the norm. That’s why Trend Micro built the Trend Micro Cloud One platform with the ability to secure physical, virtual, and multi-cloud environments.\n Cloud-Native Application: Working hard to deliver fast and iterate often, you are leveraging code in new ways and from different sources, such as infrastructure as code, open source, and public code repositories, which can introduce additional risk. Making matters more complicated, you have adopted new cloud services and processes to help you meet your objectives. You need security that supports this dynamic, complex approach without slowing you down. Trend Micro Cloud One does just that, by providing solutions for DevOps, cloud storage, cloud workloads, containers, and serverless.\n Cloud Operational Excellence: Organization are adopting a cloud center of excellence model, with the goal of creating repeatable, consistent, secure, and compliant infrastructures that can be leveraged throughout the organization. Trend Micro Cloud one is optimized to be cloud efficient and will help you meet governance, compliance, and assurance requirements quickly.\n   Learn More To learn more about our hybrid cloud security capabilities or to take a full test drive, visit Trend Micro Cloud One page\n"
},
{
	"uri": "/00_introduction/02_workload_security.html",
	"title": "Cloud One workload Security",
	"tags": [],
	"description": "",
	"content": " workload security Cloud one workload security is part of the Trend Micro Cloud One™ security service platform,it designed to secure your workloads at runtime for any of those enviroments (physical,virtual,cloud and container) securely by offering multiple advantages:\n1-Automated:\nSecurity as code lets your DevOps teams bake security into their build pipeline to release continuously and frequently. With built-in automation, including automated discovery and deployment, quick-start templates, and our Automation Center, secure your environment and meet compliance requirements quickly.\n2-FLEXIBLE:\nCloud one workload security gives you mutiple options for cloud builders to secure there enviroments and we support hybrid cloud,multi cloud,mutli-service enivroments.\n3-ALL-IN-ONE SOLUTION:\nCloud one workload security is one service out of cloud one platform that gives you unified detection and response through one platform with complete necessarily requirements to increase your security posture and accelerate your compliance.\nWhy does it matter that Trend is the leader? Faster time to protection for our customers. Instantaneous protection at time of vulnerability release vs. other security companies who then need to react and build protection. Time matters!\nUnderstanding How Trend Micro Can Help to Secure Your workloads Runtime security Any workloads that use the power of the cloud, hybrid cloud, virtual, and container. Workload Security allows customers to secure their workloads capabilities by integrating AWS accounts to cloud one workload security console, so in the dashboard, you can see all the workloads and you can start the protection journey through seven modules:\n Anti-malware: The Anti-Malware module protects your Windows and Linux workloads against malicious software, such as malware, spyware, and Trojans. Powered by the Trend Micro™ Smart Protection Network™, the Anti-Malware module helps you instantly identify and remove malware and block domains known to be command and control server.\n Intrusion prevention: The Intrusion Prevention module inspects incoming and outgoing traffic to detect and block suspicious activity. This prevents exploitation of known and zero-day vulnerabilities. Workload Security supports \u0026ldquo;virtual patching\u0026rdquo;: you can use Intrusion Prevention rules to shield from known vulnerabilities until they can be patched, which is required by many compliance regulations. You can also configure Workload Security to automatically receive new rules that shield newly discovered vulnerabilities within hours of their discovery.This module can protect your workloads against web application until code fixes can be completed.\n Firewall: The Firewall module is for controlling incoming and outgoing traffic and it also maintains firewall event logs for audits.\n web reputaion: The Web Reputation module provides content filtering by blocking access to malicious domains and known communication and control (C\u0026amp;C) servers used by criminals. The Web Reputation module taps into the Trend Micro Smart Protection Network, which identifies new threats quickly and accurately.\n Integrity Monitoring: The Integrity Monitoring module provides the ability to track both authorized and unauthorized changes made for the workloads and it will help you to make there are non-legitimate changes that may lead to comprise your cloud environment.\n Log Inspection: The Log Inspection module captures and analyzes system logs to provide audit evidence for PCI DSS or internal requirements that your organization may have.\n Application control: The Application Control module monitors changes - \u0026ldquo;drift\u0026rdquo; or \u0026ldquo;delta\u0026rdquo; - compared to the computer’s original software. Once application control is enabled, all software changes are logged and events are created when it detects new or changed software on the file system. When Deep Security Agent detects changes, you can allow or block the software, and optionally lock down the computer.\n  Architecture Workload security architecture was built to be simple to understand and monitor all of your workloads with peace of mind.\nDigging a little deeper into the architecture details, the overall deployment:\n Workload Security console: he centralized web-based management console that administrators use to configure security policy and deploy protection to the enforcement components, the Deep Security Agent.\n Deep Security Notifier: it is a security agent deployed directly on a computer which provides Application Control, Anti-Malware, Web Reputation service, Firewall, Intrusion Prevention, Integrity Monitoring, and Log Inspection protection to computers on which it is installed.\n Deep security agent software: This software will be installed in workload to provide a porper security protection for your workload.\n Deep security relay: A Deep Security Relay is an agent that is configured to redistribute Deep Security software and security updates to other agents.This helps your deployment scale.\n  To learn more about workload security, visit cloud one workload security Documentation\n"
},
{
	"uri": "/01_requirements.html",
	"title": "Requirements",
	"tags": [],
	"description": "",
	"content": " Workload security service Workshop: Requirements  A Cloud One Account. Sign up for free trial now if it\u0026rsquo;s not already the case!\n An AWS Account with AdministratorAccess permission, Sign up here if it\u0026rsquo;s not already the case! You can learn about the AdministratorAccess permissions here\n Amazon Elastic Compute Cloud (Amazon EC2) that you want to use in this workshop, if you don\u0026rsquo;t have one, you can learn how to create one [here]https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html)\n  to learn more about System requirements, visit System Requirements\n"
},
{
	"uri": "/02_deploy.html",
	"title": "Deploy Cloud One File Storage Security",
	"tags": [],
	"description": "",
	"content": " Deployment Best way to learn is to get our hands durty, so let\u0026rsquo;s deploy File Storage Security to our AWS Account. First of all, make sure that all the requirements are meet, then:\nGo to Cloud One File Storage Security, here: https://cloudone.trendmicro.com/filestorage/deployment, it will request the login information for the Cloud One, in case you don\u0026rsquo;t have it, check the requirements page that has all the details that you will need.\nClick on \u0026ldquo;Deploy\u0026rdquo; and select Scanner Stack and Storage Stack, to deploy the full solution to your AWS account.\nSelect the AWS region that best suit for you and click on Launch Stack, this will redirect you to your AWS account in the region that you choose to deploy the stack. Make sure that you\u0026rsquo;re logged in and has the correct permissions, you can check the details of the permissions required in the Requirements section.\nYou can verify the Cloud Formation code by clicking in Review Stack, to make it easier, you can also verify the CLoud Formation code by clicking the buttons below:\n All in One Template  Scanner Stack  Storage Stack  In the Cloud Formation page the only required parameter here is the name of choose bucket, which is represented by the S3BucketToScan. It also supports differents parameters to customize your installation, like Resource prefixes and optional KMS integration, for more details about these check our Documentation.\nAfter deploying the all-in-one stack, you must configure the scanner and storage stack Amazon Resource Names (ARNs). The ARNs map a scanner stack to a storage stack, allowing them to be aware of each other.\nGo to CloudFormation \u0026gt; Stacks \u0026gt; your all-in-one stack \u0026gt; Outputs tab and copy and paste the ScannerStackManagementRoleARN and StorageStackManagementRoleARN into the File Storage Security console.\nThen Click Submit. You see a couple of success messages at the bottom.\nYou have now completed the deployment of the All-in-One stack 🎉, so let\u0026rsquo;s test our deployment.\n"
},
{
	"uri": "/02_deploy/03_test_deploy.html",
	"title": "Testing your Deployment",
	"tags": [],
	"description": "",
	"content": " Generating your First Detection To test your deployment, you\u0026rsquo;ll need to generate a malware detection using the eicar file. Follow the instructions below. There is also a video demonstration if you prefer.\n Obtain the EICAR file:\nTemporarily disable your virus scanner, otherwise it will catch the eicar file and delete it. Go to the EICAR file page and download eicar_com.zip or any of the other versions of this file.\nAdd the eicar file to your S3 bucket:\nIn AWS, go to Services \u0026gt; S3 and find your S3 bucket to scan, click Upload and upload the file that you downloaded. File Storage Security will scans the file and detects as a malware.\nYou cna also use the AWS CLI to upload files, check this example:\naws s3 sync eicar.txt s3://my-bucket/path To know more on how to use the AWS CLI, check the Installation and Configuration documentation\nNow you can examine the tags from the scan result, still in your S3 bucket, click in the file that you uploaded, then scroll to the Tags section.\nLook for the following tags:\nfss-scan-date date_and_time fss-scan-result malicious fss-scanned true The tags indicate that File Storage Security scanned the file and tagged it correctly as malware. You have now tested your File Storage Security deployment 👍\nRemember to re-enable your virus scanner after testing is complete.  "
},
{
	"uri": "/03_automation.html",
	"title": "Automation and Monitoring",
	"tags": [],
	"description": "",
	"content": " Automation and Monitoring Automate Actions and Monitoring your Scans After File Storage Security completes a scan, the scan results are tagged to the file and published to the SNS ScanResultTopic.\nIf you want to do more with the results, you\u0026rsquo;ll have to create or add an action to take place after the scan. We provide many samples of integrations that can be done with Cloud One File Storage Security in our GitHub page, one of the most used Post-Action is the ability to send clean files to one S3 bucket (promote) and send malicious files to another S3 bucket (quarantine). We also provide an API to help with creating your own post-scan actions.\nContributing If you encounter a bug, think of a useful feature, or find something confusing in the docs, please create a new issue!\nWe 💖 pull requests. If you\u0026rsquo;d like to fix a bug, contribute to a feature or just correct a typo, please feel free to do so.\nIf you\u0026rsquo;re thinking of adding a new feature, consider opening an issue first to discuss it to ensure it aligns to the direction of the project (and potentially save yourself some time!).\nContribution Guidelines:  Fork this repository. Commit your code with a message that is structured according to the Conventional Commits specification. Submit a PR and request a review: Submit PR.  "
},
{
	"uri": "/03_automation/04_cloud_watch.html",
	"title": "Visibility with CloudWatch",
	"tags": [],
	"description": "",
	"content": " Monitoring your Scans with CloudWatch File Storage Security logs are in AWS CloudWatch Logs. These logs contain a bit more information than what\u0026rsquo;s available in the fss-* tags.\nTo view the scan result logs in CloudWatch Logs, go to your AWS account, in CloudFormation \u0026gt; your scanner stack \u0026gt; Resources \u0026gt; ScannerLogGroup link. The CloudWatch service appears with Log groups selected on the left.\nUnder Log streams, click a log stream with a Last event time that is later than or equal to the time when you added the file to the S3 bucket to scan and expand the event message that starts with scanner result.\nA JSON code block appears containing information about the scan. Specifically, it includes:\n timestamp: A unique number that corresponds to the time when the scan occurred. sqs-message-id: The unique ID of this event. file_url: The URL to the scanned file in S3. scanner_status and scanner_status_message  This pairing has the following values:\n 0: \u0026ldquo;successful scan\u0026rdquo;: Indicates that the scan finished successfully.\n -1: \u0026ldquo;invalid license status\u0026rdquo;: Usually indicates that File Storage Security is not fully configured. The most likely reason for an incomplete configuration is that ARNs have not been submitted through the File Storage Security console or API yet. For instructions on submitting the ARNs, see Add Stacks or Deploy stacks using the API. This message could also indicate that your license is not valid, or that File Storage Security was not able to push a new license to your stack.\n -2: \u0026ldquo;unsuccessful scan\u0026rdquo;: Indicates that the ScannerLambda function was unable to scan the file.\n -3: \u0026ldquo;scanner error\u0026rdquo;: Indicates that an internal error occurred in the ScannerLambda function.\n -4: \u0026ldquo;unsuccessful scanner invocation\u0026rdquo;: Indicates that the ScannerLambda function couldn\u0026rsquo;t finish the scan. Either the scan timeout was reached, or there were too many files to scan causing a Lambda throttling error. scanning_result: Indicates scan details such as the scanned file\u0026rsquo;s size as well as any found malware or errors.\n  You can search for scan results using AWS CloudWatch Logs Insights. Below is an example of how to set up a query.\nIn AWS, go to the CloudWatch service. On the left, under Logs, click Insights. In the main pane, click inside the Select log group(s) field, and enter ScannerLambda into the search box. Select the File Storage Security log group. It looks similar to:\n/aws/lambda/FileStorageSec-ScannerLambda Replace the contents of the text box with the following lines and click in Run Query:\nfields @timestamp, @message | filter @message like \u0026#34;scanner result\u0026#34; | sort @timestamp desc | limit 20 This query finds all scan results, up to a maximum of 20. Set the time or date range using the available buttons. If you were expecting results and don\u0026rsquo;t see them, try setting a broader time or date range.\n You should be able to see the events that you generated:\nBy expanding the details of the event, you will be able to see the event detail generated by File Storage Security in a JSON format:\nscanner result: { \u0026#34;timestamp\u0026#34;: 1615275981.7993867, \u0026#34;sqs_message_id\u0026#34;: \u0026#34;6ac6dc98-d56a-494f-bef2-10684fc53501\u0026#34;, \u0026#34;file_url\u0026#34;: \u0026#34;https://my-fss-demo.s3.us-east-2.amazonaws.com/eicar.com\u0026#34;, \u0026#34;scanner_status\u0026#34;: 0, \u0026#34;scanner_status_message\u0026#34;: \u0026#34;successful scan\u0026#34;, \u0026#34;scanning_result\u0026#34;: { \u0026#34;TotalBytesOfFile\u0026#34;: 68, \u0026#34;Findings\u0026#34;: [{ \u0026#34;malware\u0026#34;: \u0026#34;Eicar_test_file\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Virus\u0026#34; }], \u0026#34;Error\u0026#34;: \u0026#34;\u0026#34; } } You did it 🎉!\nNow that your know how to verify File Storage Security logs and events in CloudWatch you can create your own automations based on CloudWatch data 🚀\n"
},
{
	"uri": "/03_automation/05_slack_integration.html",
	"title": "Slack Integration",
	"tags": [],
	"description": "",
	"content": " In this integration, we will make a lambda function send a Slack message every time that we have a new detection, you can deploy this automation using the AWS COnsole, AWS CLI or Makefile. In this example we will demonstrate using the AWS CLI:\nRequirements  Install and COnfigure the AWS CLI - Install the AWS command line interface (CLI). See Installing the AWS CLI for details. Configure Slack Webhook App\n Create a Slack Channel to receive the notification Go to App Directory \u0026gt; Search Incoming WebHooks. Click on Incoming WebHooks, then click \u0026ldquo;Add to Slack\u0026rdquo; Choose the Channel to receive the notification Copy Webhook URL Enter the Description of your WebHook. Enter the Name of the Slack WebHook, by default it will use incoming-webhook; if you prefer, you can customize the name. If you want any custom icon to add that in Customize Icon section. Click \u0026ldquo;Save Setting\u0026rdquo;   Additional information\n Create an execution role for the Lambda function, enter the following AWS CLI command to create the role:\nLAMBDA_TRUST=\u0026#34;{ \\\u0026#34;Version\\\u0026#34;: \\\u0026#34;2012-10-17\\\u0026#34;, \\\u0026#34;Statement\\\u0026#34;: [ { \\\u0026#34;Action\\\u0026#34;: \\\u0026#34;sts:AssumeRole\\\u0026#34;, \\\u0026#34;Effect\\\u0026#34;: \\\u0026#34;Allow\\\u0026#34;, \\\u0026#34;Principal\\\u0026#34;: { \\\u0026#34;Service\\\u0026#34;: \\\u0026#34;lambda.amazonaws.com\\\u0026#34; } } ] }\u0026#34;aws iam create-role --role-name \u0026lt;YOUR_FSS_LAMBDA_SLACK_NOTIFICATION_ROLE\u0026gt; --assume-role-policy-document \u0026#34;${LAMBDA_TRUST}\u0026#34;  Where the \u0026lt;YOUR_FSS_LAMBDA_SLACK_NOTIFICATION_ROLE\u0026gt; is replaced with the name you want to give to the role. Example: FSS_Lambda_Slack_Notification_Role\n Attach the AWSLambdaBasicExecutionRole managed policy to the role:\naws iam attach-role-policy --role-name FSS_Lambda_Slack_Notification_Role --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole  Deploy the Lambda  Download the Lambda function handler.py file from GitHub. In a shell program, create a deployment package:\nzip \u0026lt;YOUR_ZIP_NAME\u0026gt;.zip handler.py  Where \u0026lt;YOUR_ZIP_NAME\u0026gt; is replaced with the name you want to give your Lambda function. Example: scan-send-slack-notification\n Create the Lambda function, using backslashes (\\) to separate the lines, as shown below:\naws lambda create-function --function-name \u0026lt;YOUR_FSS_SCAN_SEND_SLACK_NOTIFICATION\u0026gt; \\ --role \u0026lt;YOUR_FSS_LAMBDA_SLACK_NOTIFICATION_ROLE\u0026gt; \\ --runtime python3.8 \\ --timeout 30 \\ --memory-size 512 \\ --handler handler.lambda_handler \\ --zip-file fileb://\u0026lt;YOUR_ZIP_NAME\u0026gt;.zip \\ --region \u0026lt;YOUR_REGION\u0026gt; --environment Variables=\\{SLACK_URL=\u0026lt;YOUR_SLACK_URL\u0026gt;,SLACK_CHANNEL=\u0026lt;YOUR_SLACK_CHANNEL\u0026gt;,SLACK_USERNAME=\u0026lt;YOUR_SLACK_USERNAME\u0026gt;\\}   where:  \u0026lt;YOUR_FSS_SCAN_SEND_SLACK_NOTIFICATION\u0026gt; is replaced with the name you want to give your Lambda function. Example: FSS_Scan_Send_Slack_Notification. \u0026lt;YOUR_FSS_LAMBDA_SLACK_NOTIFICATION_ROLE\u0026gt; is replaced with the ARN of the role you previously created for the Lambda function. You can find the ARN in the AWS console under Services \u0026gt; IAM \u0026gt; Roles \u0026gt; your role \u0026gt; Role ARN field (at the top). Example: arn:aws:iam::000000000000:role/FSS_Lambda_Slack_Notification_Role. \u0026lt;YOUR_ZIP_NAME\u0026gt; is replaced with the name of the ZIP file you created earlier. Example: scan-send-slack-notification \u0026lt;YOUR_REGION\u0026gt; is replaced by the region where the scanning bucket resides \u0026lt;YOUR_SLACK_URL\u0026gt; is replaced with the name of your incomming webhook Slack URL. \u0026lt;YOUR_SLACK_CHANNEL\u0026gt; is replaced with the name of your Slack channel created to receive notifications. \u0026lt;YOUR_SLACK_USERNAME\u0026gt;is replaced with the subject of your Slack username to receive the notification on slack channel   Subscribe the Lambda to the SNS topic  Find the \u0026lsquo;ScanResultTopic\u0026rsquo; SNS topic ARN  In the AWS console, go to Services \u0026gt; CloudFormation \u0026gt; your all-in-one stack \u0026gt; Resources \u0026gt; your storage stack \u0026gt; Resources. Scroll down to locate the ScanResultTopic Logical ID. Copy the ScanResultTopic ARN to a temporary location. Example: arn:aws:sns:us-east-1:000000000000:FileStorageSecurity-All-In-One-Stack-StorageStack-1IDPU1PZ2W5RN-ScanResultTopic-N8DD2JH1GRKF  Find the Lambda function ARN\n📌 The Lamdba function ARN is required only if you plan to use the AWS CLI (as opposed to the console) to subscribe the Lambda to the SNS topic.\n In the AWS console, go to Services \u0026gt; Lambda. Search for the Lambda function you created previously. Example: FSS_Scan_Send_Slack_Notification Click the Lambda function link. On the top-left, locate the ARN. Copy the ARN to a temporary location. Example: arn:aws:lambda:us-east-1:000000000000:function:FSS_Scan_Send_Slack_Notification Enter the following AWS CLI command to subscribe your Lamdba function to the SNS topic:\naws sns subscribe --topic-arn \u0026lt;SNS_TOPIC_ARN\u0026gt; --protocol lambda --notification-endpoint \u0026lt;YOUR_LAMBDA_FUNCTION_ARN\u0026gt; --region \u0026lt;YOUR_REGION\u0026gt;\n where:\n \u0026lt;SNS_TOPIC_ARN\u0026gt; is replaced with the SNS topic ARN you found earlier. \u0026lt;YOUR_LAMBDA_FUNCTION_ARN\u0026gt; is replaced with the Lambda function ARN you found earlier. \u0026lt;YOUR_REGION\u0026gt; is replaced by the region where the scanning bucket resides  Lastly, grant the SNS service permission to invoke your function.\naws lambda add-permission --function-name \u0026lt;FUNCTION_NAME\u0026gt; --region \u0026lt;YOUR_REGION\u0026gt; --statement-id sns --action lambda:InvokeFunction --principal sns.amazonaws.com --source-arn \u0026lt;SNS_TOPIC_ARN\u0026gt;\n where:\n \u0026lt;FUNCTION_NAME\u0026gt; is replaced by the name of the Lambda function you created previously. Example: FSS_Scan_Send_Slack_Notification \u0026lt;YOUR_REGION\u0026gt; is replaced by the region where the scanning bucket resides \u0026lt;SNS_TOPIC_ARN\u0026gt; is replaced with the SNS topic ARN you found earlier.    "
},
{
	"uri": "/03_automation/06_promote_and_quarantine.html",
	"title": "Quarantine Malicious Files",
	"tags": [],
	"description": "",
	"content": " Prerequisites  Create S3 buckets  Create a \u0026lsquo;Promote bucket\u0026rsquo; to receive clean files. Example: fss-promote. Create a \u0026lsquo;Quarantine bucket\u0026rsquo; to receive quarantined files. Example: fss-quarantine.  Find the \u0026lsquo;ScanResultTopic\u0026rsquo; SNS topic ARN  In the AWS console, go to Services \u0026gt; CloudFormation \u0026gt; your all-in-one stack \u0026gt; Resources \u0026gt; your storage stack \u0026gt; Resources. Scroll down to locate the ScanResultTopic Logical ID. Copy the ScanResultTopic ARN to a temporary location. It will look like this: arn:aws:sns:us-east-1:123445678901:FileStorageSecurity-All-In-One-Stack-StorageStack-1IDPU1PZ2W5RN-ScanResultTopic-N8DD2JH1GRKF   Installation In this case, let\u0026rsquo;s use the Serverless Application Repository:\n Visit the app\u0026rsquo;s page on the AWS Lambda Console. Fill in the parameters:  ScanResultTopic ScanningBucketName PromoteBucketName QuarantineBucketName Optionally, you can customize the name of the Cloud Formation stack that will be created  Check the I acknowledge that this app creates custom IAM roles. checkbox. Click Deploy.  Other Options Check out other installation methods, such as AWS CLI or SAM CLI.\nTest the Application To test that the application was deployed properly, you\u0026rsquo;ll need to generate a malware detection using the eicar test file, and then check the Quarantine bucket to make sure the eicar file was sent there successfully.\n Download the Eicar test file  Temporarily disable your virus scanner or create an exception, otherwise it will catch the eicar file and delete it. Browser: Go to the eicar file page and download eicar_com.zip or any of the other versions of this file. CLI: curl -O https://secure.eicar.org/eicar_com.zip  Upload the eicar file to the ScanningBucket\n Using the AWS console\n Go to CloudFormation \u0026gt; Stacks \u0026gt; your all-in-one stack \u0026gt; your nested storage stack. In the main pane, click the Outputs tab and then copy the ScanningBucket string. Search the string in Amazon S3 console to find your ScanningBucket. Click Upload and upload eicar_com.zip. File Storage Security scans the file and detects malware. Still in S3, go to your Quarantine bucket and make sure that eicar.zip file is present. Go back to your ScanningBucket and make sure the eicar.zip is no longer there.   📌 It can take 15-30 seconds or more for the \u0026lsquo;move\u0026rsquo; operation to complete, and during this time, you may see the file in both buckets.\n Using the AWS CLI\n Enter the folowing AWS CLI command to upload the Eicar test file to the scanning bucket: aws s3 cp eicar_com.zip s3://\u0026lt;YOUR_SCANNING_BUCKET\u0026gt; where:  \u0026lt;YOUR_SCANNING_BUCKET\u0026gt; is replaced with the ScanningBucket name.    NOTE: It can take about 15-30 seconds or more for the file to move.\n You did it! 🎉\nUsing the AWS CLI or the AWS Console, you should be able to see the eicar file in your QuarantineBucketName with the correct tags.\n   "
},
{
	"uri": "/04_cleanup.html",
	"title": "Cleanup",
	"tags": [],
	"description": "",
	"content": " Clean your Environment To clean your environment, go to your CloudFormation stack called All-in-one-TM-FileStorageSecurity and click in delete, this will automatically delete the Scanner and Storage stack all together:\nAfter the CloudFormation finish the deletion process (Usually takes up to 5 minutes), you can go back to your Cloud One File Storage Security console and select your stack and also delete the stack:\nDone🎉! You have susscessfully cleanup your environment\n"
},
{
	"uri": "/03_automation/07_securityhub_integration.html",
	"title": "Security Hub Integration",
	"tags": [],
	"description": "",
	"content": " Monitoring your Scans in Security Hub "
},
{
	"uri": "/05_results.html",
	"title": "Conclusions and Results",
	"tags": [],
	"description": "",
	"content": " Conclusions and Results In this workshop, you leanrned how you can add data security to your applications using Cloud One File Storage Security in the AWS cloud, by protects the workflow through innovative techniques, such as malware scanning, integration into your custom workflows, and providing easy deployment using AWS CloudFormation template using a architecture 100% serverless – freeing you to go further and do more.\n\nGet started with File Storage Security and embrace the simplicity of cloud-native file protection, so you can store, retrieve, and share your data with confidence.\nFor more information, please visit Trend Micro Cloud One™ – File Storage Security\nFor more information about other Cloud One modules, please visit Trend Micro Cloud One™\n"
},
{
	"uri": "/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]